name: tests
on: [push, pull_request]
jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"
      - name: Install dependencies
        run: |
          pip install poetry
          poetry install
      - name: Run tests
        uses: nick-fields/retry@v2
        with:
          max_attempts: 5
          timeout_minutes: 20
          retry_wait_seconds: 0
          command: |
            poetry run pytest --exitfirst --disable-warnings --log-cli-level=DEBUG --cov-report xml:cov.xml --cov=bbot .
      - name: Upload Code Coverage
        uses: codecov/codecov-action@v2
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./cov.xml
          verbose: true
  publish:
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'push' && (github.ref == 'refs/heads/dev' || github.ref == 'refs/heads/stable')
    continue-on-error: true
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install poetry build
          poetry self add "poetry-dynamic-versioning[plugin]"
      - name: Build Pypi package
        if: github.ref == 'refs/heads/stable' || github.ref == 'refs/heads/dev'
        run: python -m build
      - name: Publish Pypi package
        if: github.ref == 'refs/heads/stable' || github.ref == 'refs/heads/dev'
        uses: pypa/gh-action-pypi-publish@release/v1.5
        with:
          password: ${{ secrets.PYPI_API_TOKEN }}
      - name: Get BBOT version
        id: version
        run: |
          echo "::set-output name=BBOT_VERSION::$(poetry version | cut -d' ' -f2 | tr -d v)"
      - name: Publish to Docker Hub (dev)
        if: github.ref == 'refs/heads/dev'
        uses: elgohr/Publish-Docker-Github-Action@v5
        with:
          name: blacklanternsecurity/bbot
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          tags: "latest,dev,${{ steps.version.outputs.BBOT_VERSION }}"
      - name: Publish to Docker Hub (stable)
        if: github.ref == 'refs/heads/stable'
        uses: elgohr/Publish-Docker-Github-Action@v5
        with:
          name: blacklanternsecurity/bbot
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          tags: "stable,${{ steps.version.outputs.BBOT_VERSION }}"
      - name: Docker Hub Description
        if: github.ref == 'refs/heads/dev'
        uses: peter-evans/dockerhub-description@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          repository: blacklanternsecurity/bbot
